{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/hayder/lighthouse/LHLfinal/final_project/components/qr-scanner.js\";\nimport React, { useState, useEffect, Component } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport ButtonWithBackground from \"../components/ButtonWithBackground\";\nimport { navigation } from \"@react-navigation/stack\";\nimport axios from \"axios\";\nexport default function QRScanner(_ref) {\n  var navigate = _ref.navigation.navigate;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      scanned = _useState4[0],\n      setScanned = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$BarCodeScanner, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(BarCodeScanner.requestPermissionsAsync());\n\n            case 2:\n              _await$BarCodeScanner = _context.sent;\n              status = _await$BarCodeScanner.status;\n              setHasPermission(status === \"granted\");\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref2) {\n    var type = _ref2.type,\n        data = _ref2.data;\n    console.log(type, data, \"test herehhhhhhh\");\n    setScanned(true);\n    navigate(\"ProductsDetails\", {\n      data: data\n    });\n  };\n\n  if (hasPermission === null) {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      }\n    }, \"Requesting for camera permission\");\n  }\n\n  if (hasPermission === false) {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      }\n    }, \"No access to camera\");\n  }\n\n  return React.createElement(View, {\n    style: {\n      display: \"flex\",\n      flex: 1,\n      alignItems: \"center\",\n      margin: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    }\n  }, React.createElement(BarCodeScanner, {\n    onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n    style: {\n      height: \"60%\",\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      alignSelf: \"center\",\n      height: 40,\n      margin: 10\n    },\n    placeholder: \"Enter barcode\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    }\n  }), scanned && (React.createElement(View, {\n    style: {\n      display: \"flex\",\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"\",\n      margin: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    }\n  }), React.createElement(ButtonWithBackground, {\n    text: \"Tap to Scan Again\",\n    color: \"#2C7873\",\n    onPress: function onPress() {\n      return setScanned(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    }\n  })), React.createElement(View, {\n    style: {\n      display: \"flex\",\n      flex: 1,\n      alignItems: \"center\",\n      margin: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    }\n  }, React.createElement(ButtonWithBackground, {\n    text: \"submit\",\n    color: \"#2C7873\",\n    onPress: function onPress() {\n      return navigate(\"ProductsDetails\", {\n        data: data\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    }\n  })));\n}","map":{"version":3,"sources":["/home/hayder/lighthouse/LHLfinal/final_project/components/qr-scanner.js"],"names":["React","useState","useEffect","Component","BarCodeScanner","ButtonWithBackground","navigation","axios","QRScanner","navigate","hasPermission","setHasPermission","scanned","setScanned","requestPermissionsAsync","status","handleBarCodeScanned","type","data","console","log","display","flex","alignItems","margin","undefined","height","width","alignSelf","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\nimport { Text, TextInput, View, StyleSheet, Button } from \"react-native\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport ButtonWithBackground from \"../components/ButtonWithBackground\";\nimport { navigation } from \"@react-navigation/stack\";\nimport axios from \"axios\";\n\nexport default function QRScanner({ navigation: { navigate } }) {\n  const [hasPermission, setHasPermission] = useState(null);\n  const [scanned, setScanned] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      const { status } = await BarCodeScanner.requestPermissionsAsync();\n      setHasPermission(status === \"granted\");\n    })();\n  }, []);\n\n  const handleBarCodeScanned = ({ type, data }) => {\n    console.log(type, data, \"test herehhhhhhh\");\n    setScanned(true);\n\n    navigate(\"ProductsDetails\", { data });\n  };\n\n  if (hasPermission === null) {\n    return <Text>Requesting for camera permission</Text>;\n  }\n  if (hasPermission === false) {\n    return <Text>No access to camera</Text>;\n  }\n\n  return (\n    <View\n      style={{\n        display: \"flex\",\n        flex: 1,\n        alignItems: \"center\",\n        margin: 5\n      }}\n    >\n      <BarCodeScanner\n        onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\n        style={{\n          height: \"60%\",\n          width: \"100%\"\n        }}\n      />\n      <TextInput\n        style={{\n          alignSelf: \"center\",\n          height: 40,\n          margin: 10\n        }}\n        placeholder=\"Enter barcode\"\n      />\n      {scanned &&\n        ((\n          <View\n            style={{\n              display: \"flex\",\n              flex: 1,\n              alignItems: \"center\",\n              justifyContent: \"\",\n              margin: 5\n            }}\n          />\n        ),\n        (\n          <ButtonWithBackground\n            text={\"Tap to Scan Again\"}\n            color=\"#2C7873\"\n            onPress={() => setScanned(false)}\n          />\n        ))}\n      <View\n        style={{\n          display: \"flex\",\n          flex: 1,\n          alignItems: \"center\",\n          margin: 5\n        }}\n      >\n        <ButtonWithBackground\n          text=\"submit\"\n          color=\"#2C7873\"\n          onPress={() => navigate(\"ProductsDetails\", { data })}\n        />\n      </View>\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}